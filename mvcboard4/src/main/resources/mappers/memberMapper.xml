<?xml version="1.0" encoding="UTF-8"?>
<!-- *Mapper.xml 정의->*(테이블명)Mapper.xml -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- SQL에 대응하는 질의어를 구성 -->
<!-- mapper 1개가 테이블 1개와 대응, namespace는 변수명 DAO에서 호출할 때 사용할 이름 -->
<!-- com.spring.Mapper.Member 일반적으로 표현-->
<!-- mybatis : insert, update, delete, select 동일한 명령을 여러번 반복사용 -->
<mapper namespace="memberMapper">
	<!-- select 질의어 종류, id dao에서 호출할 이름(중복불가) -->
	<!-- resultType 질의어를 처리후 결과를 보낼 데이터형, parameterType 질의어를 실행할 때 가져온 값의 데이터형 -->
	<!-- 레코드단위로 결과를 받아서 전달 -->
	<!-- 태그안에 실질적으로 작업할 질의어를 작성 -->
	<select id="memberList" resultType="com.spring.member.vo.MemberVO">
		SELECT userid, username, useremail, userregdate FROM member order by username
	</select>
	<!-- 삽입 -->
	<!-- 입력폼에서 vo에 데이터가 저장 vo변수를 사용하려면 EL -->
	<!--parameterType="com.spring.memver.vo.MemberVO" -->
	<insert id="memberInsert">
		INSERT INTO member(userid, userpw, username, useremail) 
		values (#{userid}, #{userpw}, #{username}, #{useremail}) 
	</insert> 

</mapper>
<!-- mapper를 완성한 후에 dao로 가서 작업 -->
